--Consider the given Database Schema: for problem statement  
Dept (Deptno , Name , Location, Managerempid) 
Employees  (name, empid, address, city, dob, date_of_joining,gender, salary, deptno) 
Gender must take value ‘M’ or ‘F’. 
Project(Projectid, title,city). 
Works (empid , Projectid, total_hrs_worked); 
Dependant(empid, name_of_dependant, age, relation) 
Primary Key is underlined. 
1. Develop DDL to implement the above schema enforcing primary key, check constraints (F 
and M for gender) and foreign key constraints. --

mysql> create database filepr5;
Query OK, 1 row affected (0.01 sec)

mysql> use filepr5;
Database changed
mysql> CREATE TABLE Dept (
    ->     Deptno INT PRIMARY KEY,
    ->     Name VARCHAR(100),
    ->
    ->
    ->     Location VARCHAR(50),
    ->     Managerempid INT
    -> );
Query OK, 0 rows affected (0.01 sec)

mysql>
    -> CREATE TABLE Employees (
    ->     name VARCHAR(100),
    ->     empid INT PRIMARY KEY,
    ->     address VARCHAR(150),
    ->     city VARCHAR(50),
    ->     dob DATE,
    ->     date_of_joining DATE,
    ->     gender CHAR(1) CHECK (gender IN ('M', 'F')),
    ->     salary DECIMAL(10, 2),
    ->     deptno INT,
    ->     FOREIGN KEY (deptno) REFERENCES Dept(Deptno)
    -> );
Query OK, 0 rows affected (0.01 sec)

mysql>
    -> CREATE TABLE Project (
    ->     Projectid INT PRIMARY KEY,
    ->     title VARCHAR(100),
    ->     city VARCHAR(50)
    -> );
Query OK, 0 rows affected (0.01 sec)

mysql>
    -> CREATE TABLE Works (
    ->     empid INT,
    ->     Projectid INT,
    ->     total_hrs_worked INT,
    ->     PRIMARY KEY (empid, Projectid),
    ->     FOREIGN KEY (empid) REFERENCES Employees(empid),
    ->     FOREIGN KEY (Projectid) REFERENCES Project(Projectid)
    -> );
Query OK, 0 rows affected (0.01 sec)

mysql>
    -> CREATE TABLE Dependant (
    ->     empid INT,
    ->     name_of_dependant VARCHAR(100),
    ->     age INT,
    ->     relation VARCHAR(50),
    ->     PRIMARY KEY (empid, name_of_dependant),
    ->     FOREIGN KEY (empid) REFERENCES Employees(empid)
    -> );
Query OK, 0 rows affected (0.02 sec)

mysql> -- Sample inserts for demonstration
Query OK, 0 rows affected (0.00 sec)

mysql>
    -> INSERT INTO Dept (Deptno, Name, Location, Managerempid) VALUES (1, 'HR', 'Mumbai',
    -> 101);
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO Dept (Deptno, Name, Location, Managerempid) VALUES (2, 'Engineering',
    -> 'Pune', 102);
Query OK, 1 row affected (0.00 sec)

mysql>
    -> INSERT INTO Employees (name, empid, address, city, dob, date_of_joining, gender,
    ->
    ->
    -> salary, deptno)
    -> VALUES ('John Doe', 101, '123 Elm St', 'Mumbai', '1980-05-10', '2005-07-15', 'M',
    -> 75000, 1);
Query OK, 1 row affected (0.00 sec)

mysql>
    -> INSERT INTO Employees (name, empid, address, city, dob, date_of_joining, gender,
    -> salary, deptno)
    -> VALUES ('Jane Smith', 102, '456 Oak St', 'Pune', '1985-03-20', '2010-09-10', 'F',
    -> 80000, 2);
Query OK, 1 row affected (0.00 sec)

mysql>
    -> INSERT INTO Project (Projectid, title, city) VALUES (1, 'Testing Project', 'Pune');
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO Project (Projectid, title, city) VALUES (2, 'Development Project',
    -> 'Mumbai');
Query OK, 1 row affected (0.00 sec)

mysql>
    -> INSERT INTO Works (empid, Projectid, total_hrs_worked) VALUES (101, 1, 100);
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO Works (empid, Projectid, total_hrs_worked) VALUES (102, 2, 200);
Query OK, 1 row affected (0.00 sec)

mysql>
    -> INSERT INTO Dependant (empid, name_of_dependant, age, relation) VALUES (101, 'Emily
    '> Doe', 15, 'Daughter');
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO Dependant (empid, name_of_dependant, age, relation) VALUES (102, 'Michael
    '> Smith', 12, 'Son');
Query OK, 1 row affected (0.00 sec)

mysql> DELETE FROM Project
    -> WHERE title = 'Testing Project';
ERROR 1451 (23000): Cannot delete or update a parent row: a foreign key constraint fails (`filepr5`.`works`, CONSTRAINT `works_ibfk_2` FOREIGN KEY (`Projectid`) REFERENCES `project` (`Projectid`))
mysql> -- Delete from the Works table where the project is referenced
Query OK, 0 rows affected (0.00 sec)

mysql> DELETE FROM Works WHERE Projectid = (SELECT Projectid FROM Project WHERE title = 'Testing Project');
Query OK, 1 row affected (0.00 sec)

mysql>
mysql> -- Now delete the project from the Project table
Query OK, 0 rows affected (0.00 sec)

mysql> DELETE FROM Project WHERE title = 'Testing Project';
Query OK, 1 row affected (0.00 sec)

mysql> show tables;
+-------------------+
| Tables_in_filepr5 |
+-------------------+
| dependant         |
| dept              |
| employees         |
| project           |
| works             |
+-------------------+
5 rows in set (0.00 sec)

mysql> SELECT name, empid, salary
    -> FROM Employees
    -> WHERE salary > 50000;
+------------+-------+----------+
| name       | empid | salary   |
+------------+-------+----------+
| John Doe   |   101 | 75000.00 |
| Jane Smith |   102 | 80000.00 |
+------------+-------+----------+
2 rows in set (0.00 sec)

mysql> SELECT *
    -> FROM Project
    -> WHERE city = 'Pune';
Empty set (0.00 sec)

mysql> SELECT name_of_dependant, age, relation
    -> FROM Dependant
    -> WHERE empid = 102;
+-------------------+------+----------+
| name_of_dependant | age  | relation |
+-------------------+------+----------+
| Michael
Smith    |   12 | Son      |
+-------------------+------+----------+
1 row in set (0.00 sec)

mysql> SELECT p.title, COUNT(w.empid) AS number_of_employees
    -> FROM Project p
    -> JOIN Works w ON p.Projectid = w.Projectid
    ->
    ->
    -> GROUP BY p.title;
+---------------------+---------------------+
| title               | number_of_employees |
+---------------------+---------------------+
| Development Project |                   1 |
+---------------------+---------------------+
1 row in set (0.00 sec)

mysql> SELECT d.Name AS department_name, AVG(e.salary) AS average_salary
    -> FROM Dept d
    -> JOIN Employees e ON d.Deptno = e.deptno
    -> GROUP BY d.Name;
+-----------------+----------------+
| department_name | average_salary |
+-----------------+----------------+
| HR              |   75000.000000 |
| Engineering     |   80000.000000 |
+-----------------+----------------+
2 rows in set (0.00 sec)

mysql> commit;
Query OK, 0 rows affected (0.00 sec)
